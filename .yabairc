#!/usr/bin/env bash

# sudo yabai --load-sa
# yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"

# Mouse focus
yabai -m config mouse_follows_focus          off
yabai -m config focus_follows_mouse          off
yabai -m config mouse_drop_action            stack

# Window
yabai -m config window_placement             second_child
yabai -m config window_shadow                off
yabai -m config window_border                off
# yabai -m config window_border_width          7
yabai -m config window_opacity               off

# Window borders
# yabai -m config active_window_border_color   0xff028ea1
# yabai -m config normal_window_border_color   0xff555555
# yabai -m config insert_feedback_color        0xffd75f5f

# Auto-balance
yabai -m config split_ratio                  0.50
yabai -m config auto_balance                 off

# Layout
yabai -m config layout                       bsp

# Gaps and padding
yabai -m config top_padding                  8
yabai -m config bottom_padding               8
yabai -m config left_padding                 8
yabai -m config right_padding                8
yabai -m config window_gap                   8

# Change focus when minimizing floating window. Don't touch
yabai -m signal --add event=window_minimized active=yes action="if \$(yabai -m query --windows --window \$YABAI_WINDOW_ID | jq -r '.\"is-floating\"'); then yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse &> /dev/null || yabai -m window --focus \$(yabai -m query --windows --space | jq .[0].id) &> /dev/null; fi"

# Change focus when closing a window. Don't touch
yabai -m signal --add event=window_destroyed active=yes action="if \$(yabai -m query --windows --window \$YABAI_WINDOW_ID | jq -r '.\"is-floating\"'); then yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse &> /dev/null || yabai -m window --focus \$(yabai -m query --windows --space | jq .[0].id) &> /dev/null; fi"

# Bar
# bar_height=$(sketchybar --query bar | jq '.geometry.height')
# yabai -m config external_bar all:$bar_height:0

# Floating Windows
declare -a float_win=(
  "Docker Desktop"
  "Automator"
  'Preferences$'
  "Discord"
  "Firefox"
  "Karabiner"
  "Bitwarden"
  "Activity Monitor"
  "System Prefences"
  "App Store"
  "Finder"
  "Music"
  "Mail"
  "Reminders"
  "Calculator"
  "Disk Utility"
  "Calendar"
  "Messages"
  "Maps"
  "SelfControl"
  "Ears"
  "Outlook"
  "AppCleaner"
  "Stickies"
  "Dictionary"
  "System Information"
  "Color Picker"
  "Digital Color Picker"
  "Font Book"
)

for app in "${float_win[@]}"
do
  yabai -m rule --add app="${app}" manage=off
done

# Safari preference windows
declare -a safari_pref=(
  "General" 
  "Tabs" 
  "AutoFill" 
  "Passwords" 
  "Search" 
  "Security" 
  "Privacy" 
  "Websites" 
  "Extensions"  
  "Advanced"
)

for s in "${safari_pref[@]}"
do
  yabai -m rule --add app="Safari" title="^$s$" manage=off
done

echo "Loaded Yabai config"

