{
  "[markdown]": {
    "editor.defaultFormatter": "yzhang.markdown-all-in-one"
  },
  "catppuccin.bracketMode": "neovim",
  "editor.accessibilitySupport": "off",
  "editor.cursorBlinking": "solid",
  "editor.fontFamily": "JetBrains Mono",
  "editor.lineNumbers": "relative",
  "editor.matchBrackets": "never",
  "editor.minimap.enabled": false,
  "editor.renderWhitespace": "trailing",
  "editor.scrollbar.horizontal": "hidden",
  "editor.scrollbar.verticalScrollbarSize": -1,
  "editor.wordWrap": "on",
  "errorLens.fontWeight": "300",
  "errorLens.messageEnabled": false,
  "explorer.openEditors.visible": 1,
  "git.openRepositoryInParentFolders": "always",
  "latex-workshop.latex.autoClean.run": "onSucceeded",
  "latex-workshop.latex.outDir": "out",
  "latex-workshop.view.pdf.viewer": "tab",
  "markdown-preview-enhanced.enableScriptExecution": true,
  "markdown-preview-enhanced.pandocPath": "/opt/homebrew/bin/pandoc",
  "markdown-preview-enhanced.previewTheme": "newsprint.css",
  "markdown.extension.preview.autoShowPreviewToSide": false,
  "redhat.telemetry.enabled": false,
  "security.workspace.trust.untrustedFiles": "open",
  "svelte.enable-ts-plugin": true,
  "terminal.external.osxExec": "alacritty.app",
  "terminal.integrated.allowChords": false,
  "terminal.integrated.copyOnSelection": true,
  "terminal.integrated.enableImages": false,
  "terminal.integrated.enableMultiLinePasteWarning": false,
  "terminal.integrated.fontFamily": "Hack Nerd Font",
  "terminal.integrated.lineHeight": 1.2,
  "typst-lsp.exportPdf": "never",
  "whichkey.bindingOverrides": [
    {
      "bindings": [
        {
          "command": "editor.action.revealDefinitionAside",
          "key": "D",
          "name": "Open definition to the side",
          "type": "command"
        },
        {
          "command": "editor.action.peekDefinition",
          "key": "d",
          "name": "Peek definition",
          "type": "command"
        },
        {
          "command": "editor.action.peekTypeDefinition",
          "key": "t",
          "name": "Peek type definition",
          "type": "command"
        },
        {
          "command": "editor.action.rename",
          "key": "r",
          "name": "Rename symbol",
          "type": "command"
        }
      ],
      "keys": "c",
      "name": "Code actions",
      "type": "bindings"
    }
  ],
  "window.autoDetectColorScheme": true,
  "workbench.colorTheme": "Dracula",
  "workbench.editor.enablePreview": false,
  "workbench.editor.showTabs": false,
  "workbench.editorAssociations": {
    "*.pdf": "latex-workshop-pdf-hook"
  },
  "workbench.preferredDarkColorTheme": "Catppuccin Mocha",
  "workbench.preferredLightColorTheme": "Catppuccin Latte",
  "workbench.productIconTheme": "el-vsc-v1-icons",
  "workbench.sideBar.location": "right",
  "zenMode.fullScreen": false,
  "terminal.integrated.env.osx": {
    "FIG_NEW_SESSION": "1"
  },
  "[python]": {
    "editor.defaultFormatter": "ms-python.black-formatter"
  },
  "dart.flutterAdbConnectOnChromeOs": true,
  "markdown-preview-enhanced.chromePath": "/Applications/Thorium.app/Contents/MacOS/Thorium",
  "editor.fontLigatures": true,
   // Vim easymotion is required for Jump menu - <SPC> j
   "vim.easymotion": true,
   // Use system clipboard for vim
   "vim.useSystemClipboard": true,
   // Trigger the main which key menu with in the active editor with vim
   // This cannot be put into keybindings.json because it will
   // create conflict with Vim.
   // https://github.com/stevenguh/spacecode/issues/3
   "vim.normalModeKeyBindingsNonRecursive": [
       {
           "before": ["<space>"],
           "commands": ["vspacecode.space"]
       },
       {
           "before": [","],
           "commands": [
               "vspacecode.space",
               {
                   "command": "whichkey.triggerKey",
                   "args": "m"
               }
           ]
       }
   ],
   "vim.visualModeKeyBindingsNonRecursive": [
       {
           "before": ["<space>"],
           "commands": ["vspacecode.space"]
       },
       {
           "before": [","],
           "commands": [
               "vspacecode.space",
               {
                   "command": "whichkey.triggerKey",
                   "args": "m"
               }
           ]
       },
       {
           "before": [">"],
           "commands": ["editor.action.indentLines"]
       },
       {
           "before": ["<"],
           "commands": ["editor.action.outdentLines"]
       }
  ],
  "window.zoomLevel": 1
}